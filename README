# This is application development ver 1.1 ----- by Khoa Bui
This application offers apossibility to turn a Rasperry Pi as a sound device. The application comes with 2 functions: a sound collector and a test tone generator.

List of Cotent:
	1. Configuration Intstructions
	2. Installation Instructions
	3.	Operating Instructions
	4. List of Files
	5. Copyright / Copyleft
	6. Contact Info.
	7. Credits and Acknowledgements
	Acoustic Sensor using RPi3

	Table of content

    Confguration Instruction
    Installation Instruction
    Server service
	Configuration Instruction

	This section contains 2 part: hardware configuration and software configuration

	1.a. Hardware configuration

	This program is designed for to ultilize a Rasperry Pi 3 with USB soundcard and microphone. Ethernet connection is required for saving data to a remote server. RPi onboard sound card doesn’t have microphone interface. We have to change the default audio device to be USB sound card.

	To do this, follow these instructions:

    Make sure the soundcard and micro phone is plugged in.
    Use “lsusb” command to check if your USB sound card is mounted.
    Use “sudo nano /etc/asound.conf” command and put following content to the file

	pcm.!default {
 	type plug
 	slave {
 	pcm "hw:1,0"
 }
}
	ctl.!default {
 	type hw
	 card 1
}

	Run “alsamixer” you should be able to see that USB sound card is the default audio device

	1.b. Software configuration

	This program require alsa-utils 1.0.25 If your system is using the 1.0.28 version, it is recommended to downgrade to the 1.0.25 version in order to avoid bugs.

	To downgrade alsa-ultis, follow these instructions:

    Use “sudo nano /etc/apt/sources.list” command and add the last line
    Run “sudo apt-get update
    Run “sudo aptitude versions alsa-utils” to check if version 1.0.25 of alsa-util is available:
    Run “sudo apt-get install alsa-utils=1.0.25-4” to downgrade.
    Reboot (if necessary)

	To make sure alsa-ultils installation was ready:

    Run “arecord -r44100 -c1 -f S16_LE -d5 test.wav” to test that your microphone is working. You should see a “test.wav” file in the current folder.
    Put earphone on. Run “aplay test.wav” to check that your recording is okay.

	This program also require libcurl library To install libcurl, follow these instructions:

    First use command “ls /usr/include/curl” to identify that /usr/include/curl/ folder exists or not.
    If the folder doesn’t exist. Run “sudo apt-get update” to update the application list.
    Run “sudo apt-get install libcurl3” to install the libcurl3.
    Run “sudo apt-get install libcurl4-openssl-dev” to install the development API of libcurl4.

    2.Installation instruction
	 The source code can be obtain from github by the command: git pull https://github.com/khoalun/appdev

	Once the source code has been downloaded, open the file comm.h to edit the url to your own receiving php file: #define SERVER_URL your_url_here

	Then use the command make to automatically compile the program: make

	Server service The PHP program used to store the data from the Raspo and view them on browser can be found in the php folder in the git respitory.

	By default Raspberry Pi boots into X-server (graphic) mode. This increases booting time, but in most cases we don’t use a display with RPi, so the first thing is to disable it. To do so, you need to connect RPi to a display via HDMI-DIV cable. 
	You also need a USB keyboard for this step. Connect it to your RPi.

	Once booted, open a “terminal” window (Ctrl+ESC, and choose from the “Accessories”). 
	Run “sudo raspi-config” command.
	Select from “boot options”: “Text console, auto-login”.
	The newer version of Raspbian disables SSH by default, therefore you have to enable it. Navigate to “Interfacing Options” and select “SSH”, Choose “Yes”, Select “Ok”
	You can also change the keyboard to be “Generic 105 key/Finnish” in “4. Internationalization Options”.
	Reboot “sudo reboot”.
	

	3.Operating Instructions
		Open putty on web server and you will receive IP address via email, using this ip to log in 
		You enter the user name: pi and password of yourself
		When you log in , type command "cd appdev1" to get in your folder 
		There are many commands you should know before running the program:
		First using "make" command to generate .o file type
		Run ./sound.out to collect the sound around voice mic, using the microphone to sense the the sound movement and see the graph when it reachs peak.
		Run ./sound.out arg then you are able to choose between (1(mono) or 2(stereo)) and choose the duration from 1 to 10.
		
		

	4. List of file on github
	 README.txt: this file contains information about other files in a directory
	 curltest.c: this file is used to transfer a data to the server
	 main.c:this file is used to operate other files which execute in the program
	 makefile:this files is used to make and compile the program to run 
	 screen.c:this files is used to view the screen control and movement and barchart display 
	 screen.h:this is the header of the screen.c and includes library, declaration
	 sound.c:this file is used to sense the sound through microphone and calculation in dB
	 sound.h:this file is the header file of comm.c
	 comm.c:This file includes functions to send data to calculate 1 second of sound samples into 8-pieces of slow decibel(ISO standard) and use 
	 libcurl to send data to server.
	 comm.h:this is the header file of comm.c


	5.Copyleft
	 This project is cooperated with an instructor: Mr.Gao Chao from Vaasa University of Applied Sciences.
	 I use Raspberry Pi  model B which is a device of Vaasa University of Applied Sciences.
	 All the source code files are free and can be distributed



	6.contact information:
	 Bui Nguyen Khoa, IT student of Vaasa university( Vuorikatu 14 B70, 65100 Vaasa, Finland.)
     If you have any questions, you can contact me through my email:buikhoa793@gmail.com
	

	7.Credits and Acknowledgements 
     After finishing this project which has the support from MR Gao.Chao , I have learned the concepts and definition of collector sound and how to build one project. 
	 This is a valuable experience to develop my project in the future 
